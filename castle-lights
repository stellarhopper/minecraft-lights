-- local arg = { ... }

local function is_light()
	local rc, blk_type = turtle.inspect()
	if not rc then
		print("lightchk: inspect returned: "..tostring(rc))
		return rc
	end

	print("lightchk: got name: "..blk_type.name)
	a, b = string.find(blk_type.name, "illumination.lamp")
	print("lightchk: got find: "..tostring(a)..tostring(b))
	if a then
		return true
	end
	return false
end

function is_floor()
	local rc, blk_type = turtle.inspectDown()
	return rc
end

local function move_fu()
	turtle.up()
	turtle.forward()
	turtle.turnLeft()
	local rc = is_light()
	turtle.turnRight()
	return rc
end

local function move_db()
	turtle.back()
	turtle.down()
	turtle.turnLeft()
	local rc = is_light()
	turtle.turnRight()
	return rc
end

local function move_unit(direction)
	if direction then
		print("move_unit: direction: "..tostring(direction))
		local light = move_fu()
	else
		print("move_unit: direction: "..tostring(direction))
		local light = move_db()
	end
	local floor = is_floor()
	return light, floor
end

-- true = forward
-- false = backward
local direction = true

print("Starting light-controlling-space-turtle!")
redstone.setOutput("left", true)
redstone.setOutput("front", true)

while true do
	light, floor = move_unit(direction)
	if floor then
		print("hit floor")
		break
	elseif not light then
		print("no lights, reversing")
		direction = not direction
	end
end

-- vim:ft=lua
